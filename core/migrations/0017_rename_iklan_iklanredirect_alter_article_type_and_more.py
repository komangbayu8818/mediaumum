# Generated by Django 5.2.5 on 2025-09-19 07:41

import ckeditor.fields
import cloudinary.models
import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0016_iklan_alter_article_type'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RenameModel(
            old_name='Iklan',
            new_name='IklanRedirect',
        ),
        migrations.AlterField(
            model_name='article',
            name='type',
            field=models.CharField(blank=True, default='Normal', max_length=100),
        ),
        migrations.CreateModel(
            name='PaidArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('judul', models.CharField(max_length=400)),
                ('isi', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('view_count', models.PositiveBigIntegerField(default=0, editable=False)),
                ('share_count', models.PositiveBigIntegerField(default=0, editable=False)),
                ('slug_art', models.SlugField(blank=True, editable=False, max_length=400)),
                ('thumbnail', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Thumbnail')),
                ('pubdate', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('duration', models.IntegerField(max_length=365)),
                ('author', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('kategori', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.kategori')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='core.TaggedArticle', to='core.ArticleTag', verbose_name='Tags')),
            ],
        ),
    ]
